
# Generated by CodiumAI

from hackerrank.various import most_commons

import pytest

class TestMostCommons:

    #  The function correctly counts the frequency of each character in the input string.
    def test_count_frequency(self):
        s = "aabbbccc"
        expected_output = [("a", 2), ("b", 3), ("c", 3)]
        assert most_commons(s) == expected_output

    #  The function correctly sorts the characters by frequency and then by ASCII value.
    def test_sort_characters(self):
        s = "aabbbccc"
        expected_output = [("b", 3), ("c", 3), ("a", 2)]
        assert most_commons(s) == expected_output

    #  The function correctly outputs the top three most common characters and their frequencies.
    def test_top_three_commons(self):
        s = "aabbbccc"
        expected_output = [("b", 3), ("c", 3), ("a", 2)]
        assert most_commons(s) == expected_output

    #  The function correctly handles an empty input string.
    def test_empty_string(self):
        s = ""
        expected_output = []
        assert most_commons(s) == expected_output

    #  The function correctly handles an input string with only one character.
    def test_single_character(self):
        s = "a"
        expected_output = [("a", 1)]
        assert most_commons(s) == expected_output

    #  The function correctly handles an input string with all characters having the same frequency.
    def test_same_frequency(self):
        s = "abc"
        expected_output = [("a", 1), ("b", 1), ("c", 1)]
        assert most_commons(s) == expected_output
